@using TaskManagement.Controllers.ViewModels;
@{
    ViewData["Title"] = "Assign Tasks";
}

@model AssignViewModel


<!DOCTYPE html>

<html>

<style>

    table {
        border: 2px solid black;
    }
        button {
    border: 2px solid blue;
    }

</style>

<body>
    <p id="errorid"></p>
    @if (@Model.IsMessageDisplayed)
    {
        <script>document.getElementById("errorid").innerHTML = @Model.Message</script>
        Model.IsMessageDisplayed = true;
    }
    
    <form method="post" asp-controller="Tasks" asp-action="Create">

    <table style="width:40%">

        <tr>
                <th>Task Management</th>
        </tr>
        <tr>
            <td><label>Project *</label></td>
                <td>
                    <select asp-for="@Model.SelectedProjectId">
                        @* <option value="">--Select Task--</option> *@
                        @foreach (var project in Model.Projects)
                        {
                            <option value="@project.ProjectId">@project.ProjectName</option>
                        }
                    </select>
                </td>
            </td>
        </tr>

        <tr>
            <td><label>Description *</label></td>

            <td>
                    <input asp-for="@Model.TaskDescription" type="text" />
            </td>

        </tr>

        <tr>
            <td><label>Start Date of Task[dd-mm-yyyy] *</label></td>

            <td>
                    <input asp-for="@Model.StartDate" type="date" />
            </td>

        </tr>

        <tr>
            <td><label>Due Date of Task[dd-mm-yyyy] *</label></td>

            <td>
                    <input asp-for="@Model.DueDate" type="date"/>
            </td>

        </tr>

        <tr>
            <td><label>Who should do this? *</label></td>
            <td>
                    <select asp-for="@Model.SelectedEmployeeId">

                    @foreach (var employee in Model.Employees)
                    {
                        <option value="@employee.EmployeeId">@employee.EmployeeName @employee.Mid</option>
                    }
            </select>
            </td>
        </tr>

        <tr>
                <td>
                    <input type="submit" value="Add Task"/>
                </td>
                <td>
                    <button asp-controller="Home" asp-action="Index">Cancel</button>
                </td>
        </tr>

    </table>
    </form>
</body>
</html>


@*
<h1 class="display-4">Assign Tasks</h1>

@using (Html.BeginForm("Create", "Tasks", FormMethod.Post))
{

        <div class="form-group">
        @Html.LabelFor(Model => Model.Projects.)
        @Html.EditorFor(Model => Model.Projects, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(Model => Model.Projects.ProjectName, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
        @Html.LabelFor(Model => Model.TaskDescription)
        @Html.EditorFor(Model => Model.TaskDescription, new { htmlAttributes = new { @class = "TaskDescription" } })
        @Html.ValidationMessageFor(Model => Model.TaskDescription, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
        @Html.LabelFor(Model => Model.StartDate)
        @Html.EditorFor(Model => Model.StartDate, new { htmlAttributes = new { @class = "StartDate" } })
        @Html.ValidationMessageFor(Model => Model.StartDate, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
        @Html.LabelFor(Model => Model.EndDate)
        @Html.EditorFor(Model => Model.EndDate, new { htmlAttributes = new { @class = "EndDate" } })
        @Html.ValidationMessageFor(Model => Model.EndDate, "", new { @class = "text-danger" })
        </div>

        <input type="submit" value="Save" class="btn btn-primary" />
}

@Html.ValidationSummary(true)

*@
